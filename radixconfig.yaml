apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: flow-landingpage
spec:
  environments:
    - name: qa
      build:
        from: dev
    - name: prod
      build: 
        from: master
  components:
    - name: redis
      image: bitnami/redis:latest
      secrets:
        - REDIS_PASSWORD
      ports:
        - name: redis
          port: 6379
    - name: web
      src: "."
      publicPort: http
      ports:
        - name: http
          port: 8080
      authentication:
        oauth2:
          clientId: d826142e-d4f6-4664-b463-6d99fc81fb90
          scope: openid profile email offline_access 1aee2186-b5f4-445a-bbf2-d28589ccb59a/MaintenanceAPIProd
          setXAuthRequestHeaders: true
          sessionStoreType: redis # redis or cookie
          redisStore:
            connectionUrl: redis://redis:6379
      variables:
        APIM_SUB_KEY: "e4624c386c344c76a7b9b795739d0462"
        API_BASE_URL: "https://api-test.gateway.equinor.com/maintenance-api/"
        EPN_URI: "https://equinor-prod1.pegacloud.net/prweb/app/MaintenanceEPN/sso_login"
        FLX_URI: "https://equinor-prod1.pegacloud.net/prweb/app/MaintenanceFLX/sso_login"
        SCM_URI: "https://equinor-prod1.pegacloud.net/prweb/PRAuth/app/FLX/sso_login"
        PROJECTS_URI: "https://equinor-prod1.pegacloud.net/prweb/PRAuth/app/Procurement/sso_login"

    # - name: auth
    #   image: quay.io/oauth2-proxy/oauth2-proxy:v7.2.1 # see https://github.com/oauth2-proxy/oauth2-proxy/blob/master/docs/docs/configuration/overview.md
    #   ports:
    #     - name: http
    #       port: 8000
    #   publicPort: http
    #   resources:
    #     requests:
    #       memory: "50Mi"
    #       cpu: "25m"
    #     limits:
    #       memory: "50Mi"
    #       cpu: "1000m"
    #   secrets:
    #     - OAUTH2_PROXY_CLIENT_ID # ID of the "Web Console" AD app. This is a secret so it can be configured per cluster, but it's not sensitive info
    #     - OAUTH2_PROXY_CLIENT_SECRET # Azure client secret for "Web Console frontend app" in the "Web Console" AD app for the appropriate cluster
    #     - OAUTH2_PROXY_COOKIE_SECRET # Output of `python3 -c 'import os,base64; print(str(base64.urlsafe_b64encode(os.urandom(16)), "utf-8"))'`
    #     - OAUTH2_PROXY_REDIRECT_URL # Should be "https://<PUBLIC_URL>/oauth2/callback". This is a secret so it can be configured per cluster, but it's not sensitive info
    #     - OAUTH2_PROXY_SCOPE # Should be "openid profile offline_access <UID>/user_impersonation email". UID is the resource client ID for API (in Azure AD -> App registration). This is a secret so it can be configured per cluster, but it's not sensitive info
    #     - OAUTH2_PROXY_REDIS_PASSWORD # Redis storage secret
    #     - OAUTH2_PROXY_REDIS_CONNECTION_URL # Where to store session info (the auth-state component)
    #   variables:
    #     OAUTH2_PROXY_COOKIE_REFRESH: "60m" # How often should the token be refreshed. Default for azure ad is currently 60m
    #     OAUTH2_PROXY_EMAIL_DOMAINS: "*" # Any email address registered in AD should be accepted
    #     OAUTH2_PROXY_HTTP_ADDRESS: "http://:8000" # The port oauth2_proxy listens on
    #     OAUTH2_PROXY_OIDC_ISSUER_URL: "https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0" # That's the Equinor tenant ID
    #     OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true" # Pass the access token upstream (to the proxy component)
    #     OAUTH2_PROXY_PASS_BASIC_AUTH: "false" # Disable unused default
    #     OAUTH2_PROXY_PASS_USER_HEADERS: "false" # Disable unused default
    #     OAUTH2_PROXY_PROVIDER: "oidc" # The "azure" provider doesn't seem to work properly
    #     OAUTH2_PROXY_SESSION_STORE_TYPE: "redis" # We're using Redis for storing session info instead of cookies (cookies would get too big)
    #     OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true" # We don't want a "click to login" page; just issue a redirect
    #     OAUTH2_PROXY_UPSTREAMS: "http://web:8080" # Where authenticated requests are routed to: the web component (nginx)

  dnsAppAlias:
    environment: prod
    component: web
  
  dnsExternalAlias:
    - alias: flow-qa.equinor.com
      environment: qa
      component: web
    - alias: flow.equinor.com
      environment: prod
      component: web
    - alias: pega.equinor.com
      environment: prod
      component: web

